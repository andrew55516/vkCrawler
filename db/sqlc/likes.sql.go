// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: likes.sql

package db

import (
	"context"
)

const getLike = `-- name: GetLike :one
SELECT id, post_id, owner from likes
WHERE post_id = $1 AND owner = $2
`

type GetLikeParams struct {
	PostID int64  `json:"post_id"`
	Owner  string `json:"owner"`
}

func (q *Queries) GetLike(ctx context.Context, arg GetLikeParams) (Like, error) {
	row := q.db.QueryRowContext(ctx, getLike, arg.PostID, arg.Owner)
	var i Like
	err := row.Scan(&i.ID, &i.PostID, &i.Owner)
	return i, err
}

const writeDownLike = `-- name: WriteDownLike :one
INSERT INTO likes (post_id,
                      owner)
VALUES ($1, $2) RETURNING id, post_id, owner
`

type WriteDownLikeParams struct {
	PostID int64  `json:"post_id"`
	Owner  string `json:"owner"`
}

func (q *Queries) WriteDownLike(ctx context.Context, arg WriteDownLikeParams) (Like, error) {
	row := q.db.QueryRowContext(ctx, writeDownLike, arg.PostID, arg.Owner)
	var i Like
	err := row.Scan(&i.ID, &i.PostID, &i.Owner)
	return i, err
}
